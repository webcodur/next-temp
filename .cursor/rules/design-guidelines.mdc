---
description: 
globs: 
alwaysApply: true
---
# 디자인 시스템 가이드

## 📁 참고 파일
- **색상 변수**: [src/styles/variables.css](mdc:src/styles/variables.css)
- **전역 스타일**: [src/styles/globals.css](mdc:src/styles/globals.css)  
- **Tailwind 설정**: [tailwind.config.js](mdc:tailwind.config.js)
- **뉴모피즘 스타일**: [src/styles/neumorphism/](mdc:src/styles/neumorphism)
- **UI 컴포넌트**: @src/components/ui/

## 🎨 핵심 원칙

이 프로젝트는 화이트 테마 기반의 뉴모피즘 디자인 시스템을 사용한다. 
다음 클래스가 이미 전역적으로 설정되어 있다.

### 뉴모피즘 음양각 시스템
- `neu-flat` - 평면 (컨테이너, 패널)
- `neu-raised` - 양각 (버튼, 인터랙티브 요소)  
- `neu-inset` - 음각 (활성/선택된 상태)

### 아이콘 상태 패턴
- `neu-icon-inactive` - 비활성 아이콘 (회색)
- `neu-icon-active` - 활성 아이콘 (primary + scale)

모든 애니메이션과 상태 변화는 사전 정의된 클래스에서 자동 처리된다.

### 색상 우선순위
1. CSS 변수 우선 사용
2. 필요시 컴포넌트에서 직접 정의
3. Tailwind 유틸리티 클래스 활용

## 📦 활용 가능한 라이브러리

필요에 따라 다음 라이브러리를 활용할 수 있다.

### 🎭 애니메이션 & 인터랙션
- **framer-motion**: 고급 애니메이션, 제스처, 레이아웃 애니메이션
- **@dnd-kit/core, @dnd-kit/sortable**: 드래그 앤 드롭, 정렬 기능

### 🧩 UI 컴포넌트
- **@radix-ui/react-***: 접근성 기반 무뇌 UI 컴포넌트 (Avatar, Collapsible, Slot, Tooltip)
- **lucide-react**: 일관된 아이콘 시스템
- **sonner**: 토스트 알림

### 📊 데이터 시각화
- **@tanstack/react-table**: 테이블, 데이터 그리드
- **recharts**: 차트, 그래프
- **three**: 3D 그래픽, WebGL

### 📝 에디터 & 폼
- **@tinymce/tinymce-react**: 리치 텍스트 에디터
- **react-hook-form**: 폼 상태 관리
- **react-datepicker, react-day-picker**: 날짜 선택
- **zod**: 스키마 검증

### 🔧 상태 & 유틸리티
- **jotai**: 원자적 상태 관리
- **@tanstack/react-query**: 서버 상태 관리
- **clsx, tailwind-merge**: CSS 클래스 조합
- **class-variance-authority**: 컴포넌트 변형 관리
- **date-fns**: 날짜 유틸리티

### 🎨 스타일링 통합 팁
- Radix UI 컴포넌트에는 뉴모피즘 클래스 적용
- Framer Motion과 뉴모피즘 상태 전환 조합
- 모든 인터랙티브 요소는 `neu-raised` → `neu-inset` 전환
