---
description: 
globs: 
alwaysApply: true
---
# 디자인 시스템 가이드

## 📁 참고 파일
- **색상 변수**: [src/styles/variables.css](mdc:src/styles/variables.css)
- **전역 스타일**: [src/styles/globals.css](mdc:src/styles/globals.css)  
- **Tailwind 설정**: [tailwind.config.js](mdc:tailwind.config.js)
- **뉴모피즘 스타일**: [src/styles/neumorphism/](mdc:src/styles/neumorphism)

## 🎨 핵심 원칙

이 프로젝트는 화이트 테마 기반의 뉴모피즘 디자인 시스템을 사용한다. 모든 색상은 CSS 변수를 기반으로 하며, 투명도와 그라데이션을 적극 활용하여 깊이감을 표현한다.

뉴모피즘의 핵심인 음양각 처리를 통해 UI 요소들이 실제로 튀어나오거나 눌린 듯한 효과를 구현한다. 양각은 기본 상태의 버튼과 인터랙티브 요소에, 음각은 활성화되거나 선택된 상태에 적용한다.

## 🔧 통합 패턴 시스템

디자인 일관성을 위해 세 가지 기본 패턴으로 통합했다. 평면 스타일은 컨테이너와 패널에, 양각은 버튼과 인터랙티브 요소에, 음각은 활성 상태 표현에 사용한다.

### 뉴모피즘 음양각 시스템
- `neu-flat` - 평면 (컨테이너, 패널)
- `neu-raised` - 양각 (버튼, 인터랙티브 요소)  
- `neu-inset` - 음각 (활성/선택된 상태)

아이콘도 두 가지 상태로 단순화했다. 비활성 상태는 회색 톤으로, 활성 상태는 프라이머리 색상과 스케일 효과를 적용한다.

### 아이콘 상태 패턴
- `neu-icon-inactive` - 비활성 아이콘 (회색)
- `neu-icon-active` - 활성 아이콘 (primary + scale)

모든 애니메이션과 상태 변화는 사전 정의된 클래스에서 자동 처리되므로, 개발자가 별도로 트랜지션이나 호버 효과를 작성할 필요가 없다.

## 💡 사용 원칙

버튼은 활성 상태에 따라 음각과 양각을 구분해서 사용하고, 컨테이너는 평면 스타일로 통일한다. 아이콘은 상태에 따라 두 가지 클래스만 사용한다.

### 색상 우선순위
1. CSS 변수 우선 사용
2. 필요시 컴포넌트에서 직접 정의
3. Tailwind 유틸리티 클래스 활용

## ⚠️ 엄격한 규칙

음양각 세 종류와 아이콘 두 상태만 사용하며, 커스텀 애니메이션 작성은 금지한다. 모든 컴포넌트는 동일한 패턴을 따라야 하며, 일관성을 강제한다.









