세대 통합 관리 시스템 API 가이드
=====================================

## 개요
세대 통합 관리 시스템은 4개의 핵심 엔티티로 구성됩니다:
- household (세대/세대) 
- instance (가구 - 실제 입주)
- resident (입주민)
- car (차량)

## 1. HOUSEHOLD API - 세대/세대 관리
위치: @household/

기본 개념:
- household = 물리적 세대 (예: A동 101호)
- 동, 호수, 면적, 타입 등 부동산 정보 관리

주요 API:
- GET /households - 세대 목록 조회/검색
- POST /households - 새 세대 등록
- GET /households/{id} - 세대 상세 정보
- PUT /households/{id} - 세대 정보 수정
- DELETE /households/{id} - 세대 삭제

하위 기능:
- GET /households/{id}/instances - 해당 세대의 가구 이력 조회
- POST /households/{id}/instances - 새로운 가구 등록

## 2. INSTANCE API - 가구 관리  
위치: @instance/

기본 개념:
- instance = 가구 (세대에 거주하는 가족 단위)
- 한 세대에 여러 가구 이력이 있을 수 있음 (이사, 전출입 등)
- 입주 기간, 비밀번호, 서비스 설정 등 관리

주요 API:
- GET /instances - 가구 목록 조회
- GET /instances/{id} - 가구 상세 정보
- PUT /instances/{id} - 가구 정보 수정
- DELETE /instances/{id} - 가구 종료

설정 관리:
- GET/PUT /instances/{id}/service-config - 서비스 설정 (신규 입주민 추가 가능 여부, 공동현관 구독, 임시 접근 등)
- GET/PUT /instances/{id}/visit-config - 방문 설정 (방문 시간, 방문 요청 제한 등)

## 3. RESIDENT API - 입주민 관리
위치: @resident/

기본 개념:
- resident = 개별 사람 (이름, 연락처, 생년월일 등 개인정보)
- 여러 가구에 속할 수 있음 (이사, 다가구 등)

주요 API:
- GET /residents - 입주민 목록 조회/검색
- POST /residents - 새 입주민 등록
- GET /residents/{id} - 입주민 상세 정보 (거주 이력 포함)
- PATCH /residents/{id} - 입주민 정보 수정
- DELETE /residents/{id} - 입주민 삭제

관계 관리:
- POST /residents/households - 입주민을 가구에 연결 (세대주, 배우자, 자녀 등)
- PATCH /residents/households/{id} - 관계 정보 수정
- DELETE /residents/households/{id} - 관계 해제
- POST /residents/move - 입주민 이주 처리

## 4. CAR API - 차량 관리
위치: @car/

기본 개념:
- car = 차량 정보 (번호판, 차종, 이미지 등)
- 가구 및 입주민과 연결 관계 관리

주요 API:
- GET /cars - 차량 목록 조회/검색
- POST /cars - 새 차량 등록
- GET /cars/{id} - 차량 상세 정보
- PATCH /cars/{id} - 차량 정보 수정
- DELETE /cars/{id} - 차량 삭제

가구 연결:
- GET /cars/households - 차량-가구 연결 관계 조회 (검색/페이지네이션)
- POST /cars/households - 차량을 가구에 연결
- GET /cars/households/{carId} - 특정 차량의 사용자 목록 및 설정
- PATCH /cars/households/{id} - 연결 설정 수정 (공유 차량 여부 등)
- DELETE /cars/households/{id} - 연결 해제

입주민 연결:
- POST /cars/residents - 차량 사용자 추가
- PATCH /cars/residents/{id} - 사용자 설정 (알림, 주 사용자 등)
- DELETE /cars/residents/{id} - 사용자 제거

※ 중복 파일 정리 완료: 동일 기능의 API들이 여러 파일로 분산되어 있던 문제 해결

## 통합 관리 페이지 구성 예시

1. 세대 상세 섹션 (household)
   - 세대번호, 동, 층, 면적, 타입, 상태

2. 가구 상세 섹션 (instance) 
   - 세대주, 연락처, 입주일, 이메일, 가족수, 비고

3. 입주민 상세 섹션 (resident)
   - 입주민 목록 테이블 (이름, 관계, 연락처, 생년월일)
   - 입주민 추가/수정/삭제

4. 차량 상세 섹션 (car)
   - 차량 목록 테이블 (차량번호, 차종, 소유자, 등록일)
   - 차량 추가/수정/삭제

## 데이터 흐름 예시

1. 새 가구 입주 등록:
   household 조회 → instance 생성 → resident 연결 → car 등록/연결

2. 입주민 이주:
   기존 관계 해제 → 새 가구에 연결 → 차량 연결 관계 업데이트

3. 차량 등록:
   car 생성 → 가구 연결 → resident 사용자 등록

## 주의사항

- 모든 API는 camelCase(클라이언트) ↔ snake_case(서버) 변환 처리됨
- 페이지네이션 지원 (page, limit, total, totalPages)
- 에러 처리는 success/errorMsg 패턴 사용
- 삭제는 대부분 소프트 삭제 (deleted_at 사용)
