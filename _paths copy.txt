  /configs/{key}:
    get:
      description: 지정된 키의 설정값을 조회합니다.
      operationId: get특정설정값조회
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: key
          required: true
          in: path
          description: 조회할 설정 키
          schema:
            type: string
      responses:
        '200':
          description: 특정 설정값 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDto'
      security:
        - bearer: []
      summary: 특정 설정값 조회
      tags:
        - System Config Management (최고 관리자 ↑)
    put:
      description: 설정값을 업데이트합니다.
      operationId: update설정값업데이트
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: key
          required: true
          in: path
          description: 설정값 키
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigDto'
      responses:
        '200':
          description: 설정값 업데이트 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDto'
      security:
        - bearer: []
      summary: 설정값 업데이트
      tags:
        - System Config Management (최고 관리자 ↑)
  /configs:
    get:
      description: 모든 설정값을 조회합니다.
      operationId: get모든설정값조회
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      summary: 모든 설정값 조회
      tags:
        - System Config Management (최고 관리자 ↑)
  /ip/block:
    get:
      description: Redis에 저장된 모든 차단된 IP 주소와 상세 정보를 조회합니다.
      operationId: get차단된Ip목록조회
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 차단된 IP 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockedIpInfoDto'
      security:
        - bearer: []
      summary: 차단된 IP 목록 조회
      tags:
        - IP Block Management (최고 관리자 ↑)
    delete:
      description: Redis에 저장된 모든 차단된 IP 주소를 해제합니다.
      operationId: delete모든Ip차단해제
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
      responses:
        '204':
          description: 모든 IP 차단 해제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContentResponseDto'
      security:
        - bearer: []
      summary: 모든 IP 차단 해제
      tags:
        - IP Block Management (최고 관리자 ↑)
  /ip/block/history/search:
    get:
      description: 쿼리 조건에 따라 차단 내역을 검색합니다.
      operationId: search차단내역검색
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: '페이지 번호 (기본값: 1)'
          schema:
            example: 1
            type: number
        - name: limit
          required: false
          in: query
          description: '페이지당 항목 수 (기본값: 10)'
          schema:
            example: 10
            type: number
      responses:
        '200':
          description: 차단 내역 검색 성공
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PageDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/BlockHistoryResponseDto'
      security:
        - bearer: []
      summary: 차단 내역 검색
      tags:
        - IP Block Management (최고 관리자 ↑)
  /ip/block/{ip}:
    delete:
      description: 지정된 IP 주소의 차단을 해제합니다.
      operationId: delete특정Ip차단해제
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: ip
          required: true
          in: path
          description: 차단 해제할 IP 주소
          schema:
            type: integer
      responses:
        '204':
          description: 특정 IP 차단 해제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContentResponseDto'
      security:
        - bearer: []
      summary: 특정 IP 차단 해제
      tags:
        - IP Block Management (최고 관리자 ↑)
  /cache/stats:
    get:
      description: 전체 캐시 상태와 통계를 조회합니다.
      operationId: get캐시통계조회
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      summary: 캐시 통계 조회
      tags:
        - Cache Management (최고 관리자 ↑)
  /cache/namespace/{namespace}/stats:
    get:
      description: 특정 네임스페이스의 캐시 통계를 조회합니다.
      operationId: get네임스페이스별캐시통계조회
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: namespace
          required: true
          in: path
          description: 캐시 네임스페이스
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      summary: 네임스페이스별 캐시 통계 조회
      tags:
        - Cache Management (최고 관리자 ↑)
  /cache/namespace/{namespace}:
    delete:
      description: 특정 네임스페이스의 모든 캐시를 삭제합니다.
      operationId: delete네임스페이스캐시삭제
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: namespace
          required: true
          in: path
          description: 삭제할 캐시 네임스페이스
          schema:
            type: string
      responses:
        '204':
          description: 네임스페이스 캐시 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContentResponseDto'
      security:
        - bearer: []
      summary: 네임스페이스 캐시 삭제
      tags:
        - Cache Management (최고 관리자 ↑)