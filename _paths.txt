  /residents/move:
    post:
      description: |-
        같은 현장 내에서 거주자를 다른 세대로 이동시킵니다. (이력 보존)

        relationship과 memo는 선택값입니다.
      operationId: create거주자세대이동
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveResidentDto'
      responses:
        '201':
          description: 거주자 세대 이동 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResidentHouseholdDto'
      security:
        - bearer: []
        - bearer: []
      summary: 거주자 세대 이동
      tags:
        - 거주자 관리
  /residents:
    get:
      description: 거주자 목록을 조회합니다.
      operationId: search거주자목록조회
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: '페이지 번호 (기본값: 1)'
          schema:
            example: 1
            type: number
        - name: limit
          required: false
          in: query
          description: '페이지당 항목 수 (기본값: 10)'
          schema:
            example: 10
            type: number
        - name: name
          required: false
          in: query
          description: 이름으로 검색
          schema:
            type: string
        - name: phone
          required: false
          in: query
          description: 전화번호로 검색
          schema:
            type: string
        - name: email
          required: false
          in: query
          description: 이메일로 검색
          schema:
            type: string
        - name: gender
          required: false
          in: query
          description: gender로 검색
          schema:
            type: string
        - name: address_1depth
          required: false
          in: query
          description: address_1depth로 검색
          schema:
            type: string
        - name: address_2depth
          required: false
          in: query
          description: address_2depth로 검색
          schema:
            type: string
        - name: address_3depth
          required: false
          in: query
          description: address_3depth로 검색
          schema:
            type: string
      responses:
        '200':
          description: 거주자 목록 조회 성공
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PageDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ResidentDto'
      security:
        - bearer: []
        - bearer: []
      summary: 거주자 목록 조회
      tags:
        - 거주자 관리
  /residents/households:
    post:
      description: |-
        거주자와 세대 간의 관계를 생성합니다.

        거주자가 앱으로 세대 연결을 하지 못하는 경우 강제로 연결하는 작업입니다.
      operationId: create거주자세대관계생성
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResidentHouseholdDto'
      responses:
        '201':
          description: 거주자-세대 관계 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResidentHouseholdDto'
      security:
        - bearer: []
        - bearer: []
      summary: 거주자-세대 관계 생성
      tags:
        - 거주자 관리
  /residents/households/{id}:
    patch:
      description: 거주자와 세대 간의 관계를 수정합니다.
      operationId: update거주자세대관계수정
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: 관계 ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResidentHouseholdDto'
      responses:
        '200':
          description: 거주자-세대 관계 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResidentHouseholdDto'
      security:
        - bearer: []
        - bearer: []
      summary: 거주자-세대 관계 수정
      tags:
        - 거주자 관리
    delete:
      description: 거주자와 세대 간의 관계를 삭제합니다.
      operationId: delete거주자세대관계삭제
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: 관계 ID
          schema:
            type: integer
      responses:
        '204':
          description: 거주자-세대 관계 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContentResponseDto'
      security:
        - bearer: []
        - bearer: []
      summary: 거주자-세대 관계 삭제
      tags:
        - 거주자 관리
  /residents/{id}/history:
    get:
      description: 거주자의 세대 이동 이력을 시간순으로 조회합니다.
      operationId: get거주자이동이력조회
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: 거주자 ID
          schema:
            type: integer
      responses:
        '200':
          description: ''
      security:
        - bearer: []
        - bearer: []
      summary: 거주자 이동 이력 조회
      tags:
        - 거주자 관리
  /residents/{id}:
    get:
      description: 특정 거주자의 상세 정보를 조회합니다.
      operationId: get거주자상세조회
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: 거주자 ID
          schema:
            type: integer
      responses:
        '200':
          description: 거주자 상세 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResidentDetailDto'
      security:
        - bearer: []
        - bearer: []
      summary: 거주자 상세 조회
      tags:
        - 거주자 관리
    patch:
      description: 특정 거주자의 정보를 수정합니다.
      operationId: update거주자수정
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: 거주자 ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResidentDto'
      responses:
        '200':
          description: 거주자 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResidentDto'
      security:
        - bearer: []
        - bearer: []
      summary: 거주자 수정
      tags:
        - 거주자 관리
    delete:
      description: 특정 거주자를 삭제합니다.
      operationId: delete거주자삭제
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: 거주자 ID
          schema:
            type: integer
      responses:
        '204':
          description: 거주자 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContentResponseDto'
      security:
        - bearer: []
        - bearer: []
      summary: 거주자 삭제
      tags:
        - 거주자 관리
  /households:
    post:
      description: 세대를 생성합니다.
      operationId: create세대생성관리자
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHouseholdDto'
      responses:
        '201':
          description: 세대 생성 (관리자 ↑) 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdWithParkinglotDto'
      security:
        - bearer: []
        - bearer: []
      summary: 세대 생성 (관리자 ↑)
      tags:
        - 세대 관리
    get:
      description: |-
        등록된 세대 목록을 페이지네이션과 필터링으로 조회합니다.

        기본 정렬은 address_1depth, address_2depth 순으로 정렬합니다.
      operationId: search세대목록조회
      parameters:
        - name: page
          required: false
          in: query
          description: '페이지 번호 (기본값: 1)'
          schema:
            minimum: 1
            default: 1
            example: 1
            type: number
        - name: limit
          required: false
          in: query
          description: '페이지당 항목 수 (기본값: 10)'
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            example: 10
            type: number
        - name: household_type
          required: false
          in: query
          description: 세대 유형
          schema:
            type: string
            enum:
              - GENERAL
              - TEMP
              - COMMERCIAL
        - name: address_1depth
          required: false
          in: query
          description: 주소 검색어
          schema:
            type: string
        - name: address_2depth
          required: false
          in: query
          description: 주소 검색어
          schema:
            type: string
        - name: address_3depth
          required: false
          in: query
          description: 주소 검색어
          schema:
            type: string
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 세대 목록 조회 성공
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PageDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/HouseholdWithParkinglotAndInstancesDto
      security:
        - bearer: []
        - bearer: []
      summary: 세대 목록 조회
      tags:
        - 세대 관리
  /households/instances:
    get:
      description: 쿼리 조건에 따라 세대 인스턴스 목록과 페이지 정보를 검색합니다.
      operationId: search세대인스턴스검색
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: '페이지 번호 (기본값: 1)'
          schema:
            example: 1
            type: number
        - name: limit
          required: false
          in: query
          description: '페이지당 항목 수 (기본값: 10)'
          schema:
            example: 10
            type: number
      responses:
        '200':
          description: 세대 인스턴스 검색 성공
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PageDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/HouseholdInstanceDto'
      security:
        - bearer: []
        - bearer: []
      summary: 세대 인스턴스 검색
      tags:
        - 세대 관리
  /households/{id}:
    get:
      description: 특정 세대의 상세 정보와 관련 인스턴스들을 조회합니다.
      operationId: get세대상세조회
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: 세대 ID
          schema:
            type: integer
      responses:
        '200':
          description: 세대 상세 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdWithParkinglotAndInstancesDto'
      security:
        - bearer: []
        - bearer: []
      summary: 세대 상세 조회
      tags:
        - 세대 관리
    put:
      description: 특정 세대의 정보를 수정합니다.
      operationId: update세대정보수정
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: 세대 ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHouseholdDto'
      responses:
        '200':
          description: 세대 정보 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdWithParkinglotDto'
      security:
        - bearer: []
        - bearer: []
      summary: 세대 정보 수정
      tags:
        - 세대 관리
    delete:
      description: 특정 세대를 삭제합니다 (소프트 삭제).
      operationId: delete세대삭제
      parameters:
        - name: id
          required: true
          in: path
          description: 세대 ID
          schema:
            type: integer
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
      responses:
        '204':
          description: 세대 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContentResponseDto'
      security:
        - bearer: []
        - bearer: []
      summary: 세대 삭제
      tags:
        - 세대 관리
  /households/{id}/instances:
    post:
      description: 특정 세대에 새로운 거주 기간(인스턴스)을 생성합니다.
      operationId: create세대인스턴스생성
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: 세대 ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHouseholdInstanceDto'
      responses:
        '201':
          description: 세대 인스턴스 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdInstanceDto'
      security:
        - bearer: []
        - bearer: []
      summary: 세대 인스턴스 생성
      tags:
        - 세대 관리
    get:
      description: 특정 세대의 모든 인스턴스(거주 기간) 목록을 조회합니다.
      operationId: search세대별인스턴스목록
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
        - name: page
          required: false
          in: query
          description: '페이지 번호 (기본값: 1)'
          schema:
            minimum: 1
            default: 1
            example: 1
            type: number
        - name: limit
          required: false
          in: query
          description: '페이지당 항목 수 (기본값: 10)'
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            example: 10
            type: number
        - name: household_id
          required: false
          in: query
          description: 세대 ID
          schema:
            type: number
        - name: instance_name
          required: false
          in: query
          description: 인스턴스 이름
          schema:
            type: string
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 세대별 인스턴스 목록 성공
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PageDto'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/HouseholdInstanceDto'
      security:
        - bearer: []
        - bearer: []
      summary: 세대별 인스턴스 목록
      tags:
        - 세대 관리
  /households/instances/{instance_id}:
    get:
      description: 특정 세대 인스턴스의 상세 정보를 조회합니다.(삭제된 세대 포함)
      operationId: get세대인스턴스상세조회
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: instance_id
          required: true
          in: path
          description: 인스턴스 ID
          schema:
            type: integer
      responses:
        '200':
          description: 세대 인스턴스 상세 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdInstanceDetailDto'
      security:
        - bearer: []
        - bearer: []
      summary: 세대 인스턴스 상세 조회
      tags:
        - 세대 관리
    put:
      description: 특정 세대 인스턴스의 정보를 수정합니다.
      operationId: update세대인스턴스수정
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: instance_id
          required: true
          in: path
          description: 인스턴스 ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHouseholdInstanceDto'
      responses:
        '200':
          description: 세대 인스턴스 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdInstanceDto'
      security:
        - bearer: []
        - bearer: []
      summary: 세대 인스턴스 수정
      tags:
        - 세대 관리
    delete:
      description: 특정 세대 인스턴스를 삭제합니다 (이사 처리).
      operationId: delete세대인스턴스삭제
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: instance_id
          required: true
          in: path
          description: 인스턴스 ID
          schema:
            type: integer
      responses:
        '204':
          description: 세대 인스턴스 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContentResponseDto'
      security:
        - bearer: []
        - bearer: []
      summary: 세대 인스턴스 삭제
      tags:
        - 세대 관리
  /households/instances/{instance_id}/config/service:
    put:
      description: 세대 인스턴스의 서비스 설정을 수정합니다.
      operationId: update세대서비스설정수정
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: instance_id
          required: true
          in: path
          description: 인스턴스 ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHouseholdServiceConfigDto'
      responses:
        '200':
          description: 세대 서비스 설정 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdServiceConfigDto'
      security:
        - bearer: []
        - bearer: []
      summary: 세대 서비스 설정 수정
      tags:
        - 세대 관리
  /households/instances/{instance_id}/config/visit:
    put:
      description: 세대 인스턴스의 방문 시간 설정을 수정합니다.
      operationId: update세대방문설정수정
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: instance_id
          required: true
          in: path
          description: 인스턴스 ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHouseholdVisitConfigDto'
      responses:
        '200':
          description: 세대 방문 설정 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdVisitConfigDto'
      security:
        - bearer: []
        - bearer: []
      summary: 세대 방문 설정 수정
      tags:
        - 세대 관리
    get:
      description: 세대 인스턴스의 방문 설정을 조회합니다.
      operationId: get세대방문설정조회
      parameters:
        - name: x-parkinglot-id
          in: header
          description: 주차장 ID
          required: false
          schema:
            type: string
        - name: instance_id
          required: true
          in: path
          description: 인스턴스 ID
          schema:
            type: integer
      responses:
        '200':
          description: 세대 방문 설정 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HouseholdVisitConfigDto'
      security:
        - bearer: []
        - bearer: []
      summary: 세대 방문 설정 조회
      tags:
        - 세대 관리
